#include "mainwindow.h"

QMap<QString, MainWindow::OpCode> MainWindow::OpCodeTable
{
    { "idl",  OpCode( None,     0x0000) },
    { "ldn",  OpCode( Register, 0x0000) },
    { "inc",  OpCode( Register, 0x0010) },
    { "dec",  OpCode( Register, 0x0020) },
    { "br",   OpCode( Byte,     0x0030) },
    { "bq",   OpCode( Byte,     0x0031) },
    { "bz",   OpCode( Byte,     0x0032) },
    { "bdf",  OpCode( Byte,     0x0033) },
    { "bpz",  OpCode( Byte,     0x0033) },
    { "bge",  OpCode( Byte,     0x0033) },
    { "b1",   OpCode( Byte,     0x0034) },
    { "b2",   OpCode( Byte,     0x0035) },
    { "b3",   OpCode( Byte,     0x0036) },
    { "b4",   OpCode( Byte,     0x0037) },
    { "nbr",  OpCode( None,     0x0038) },
    { "skp",  OpCode( None,     0x0038) },
    { "bnq",  OpCode( Byte,     0x0039) },
    { "bnz",  OpCode( Byte,     0x003A) },
    { "bnf",  OpCode( Byte,     0x003B) },
    { "bm",   OpCode( Byte,     0x003B) },
    { "bl",   OpCode( Byte,     0x003B) },
    { "bn1",  OpCode( Byte,     0x003C) },
    { "bn2",  OpCode( Byte,     0x003D) },
    { "bn3",  OpCode( Byte,     0x003E) },
    { "bn4",  OpCode( Byte,     0x003F) },
    { "lda",  OpCode( Register, 0x0040) },
    { "str",  OpCode( Register, 0x0050) },
    { "irx",  OpCode( None,     0x0060) },
    { "out",  OpCode( Port,     0x0060) },
    { "inp",  OpCode( Port,     0x0068) },
    { "ret",  OpCode( None,     0x0070) },
    { "dis",  OpCode( None,     0x0071) },
    { "ldxa", OpCode( None,     0x0072) },
    { "stxd", OpCode( None,     0x0073) },
    { "adc",  OpCode( None,     0x0074) },
    { "sdb",  OpCode( None,     0x0075) },
    { "shrc", OpCode( None,     0x0076) },
    { "rshr", OpCode( None,     0x0076) },
    { "smb",  OpCode( None,     0x0077) },
    { "sav",  OpCode( None,     0x0078) },
    { "mark", OpCode( None,     0x0079) },
    { "req",  OpCode( None,     0x007A) },
    { "seq",  OpCode( None,     0x007B) },
    { "adci", OpCode( Byte,     0x007C) },
    { "sdbi", OpCode( Byte,     0x007D) },
    { "shlc", OpCode( None,     0x007E) },
    { "rshl", OpCode( None,     0x007E) },
    { "smbi", OpCode( Byte,     0x007F) },
    { "glo",  OpCode( Register, 0x0080) },
    { "ghi",  OpCode( Register, 0x0090) },
    { "plo",  OpCode( Register, 0x00A0) },
    { "phi",  OpCode( Register, 0x00B0) },
    { "lbr",  OpCode( Word,     0x00C0) },
    { "lbq",  OpCode( Word,     0x00C1) },
    { "lbz",  OpCode( Word,     0x00C2) },
    { "lbdf", OpCode( Word,     0x00C3) },
    { "nop",  OpCode( None,     0x00C4) },
    { "lsnq", OpCode( None,     0x00C5) },
    { "lsnz", OpCode( None,     0x00C6) },
    { "lsnf", OpCode( None,     0x00C7) },
    { "lskp", OpCode( None,     0x00C8) },
    { "nlbr", OpCode( None,     0x00C8) },
    { "lbnq", OpCode( Word,     0x00C9) },
    { "lbnz", OpCode( Word,     0x00CA) },
    { "lbnf", OpCode( Word,     0x00CB) },
    { "lsie", OpCode( None,     0x00CC) },
    { "lsq",  OpCode( None,     0x00CD) },
    { "lsz",  OpCode( None,     0x00CE) },
    { "lsdf", OpCode( None,     0x00CF) },
    { "sep",  OpCode( Register, 0x00D0) },
    { "sex",  OpCode( Register, 0x00E0) },
    { "ldx",  OpCode( None,     0x00F0) },
    { "or",   OpCode( None,     0x00F1) },
    { "and",  OpCode( None,     0x00F2) },
    { "xor",  OpCode( None,     0x00F3) },
    { "add",  OpCode( None,     0x00F4) },
    { "sd",   OpCode( None,     0x00F5) },
    { "shr",  OpCode( None,     0x00F6) },
    { "sm",   OpCode( None,     0x00F7) },
    { "ldi",  OpCode( Byte,     0x00F8) },
    { "ori",  OpCode( Byte,     0x00F9) },
    { "ani",  OpCode( Byte,     0x00FA) },
    { "xri",  OpCode( Byte,     0x00FB) },
    { "adi",  OpCode( Byte,     0x00FC) },
    { "sdi",  OpCode( Byte,     0x00FD) },
    { "shl",  OpCode( None,     0x00FE) },
    { "smi",  OpCode( Byte,     0x00FF) },
    { "rldi", OpCode( RegWord,  0x68C0) },
    { "rlxa", OpCode( Register, 0x6860) },
    { "rsxd", OpCode( Register, 0x68A0) },
    { "dbnz", OpCode( RegWord,  0x6820) },
    { "rnx",  OpCode( Register, 0x68B0) },
    { "dadd", OpCode( None,     0x68F4) },
    { "dadi", OpCode( Byte,     0x68FC) },
    { "dadc", OpCode( None,     0x6874) },
    { "daci", OpCode( Byte,     0x687C) },
    { "dsm",  OpCode( None,     0x68F7) },
    { "dsmi", OpCode( Byte,     0x68FF) },
    { "dsmb", OpCode( None,     0x6877) },
    { "dsbi", OpCode( Byte,     0x687F) },
    { "bci",  OpCode( Byte,     0x683E) },
    { "bxi",  OpCode( Byte,     0x683F) },
    { "ldc",  OpCode( None,     0x6806) },
    { "gec",  OpCode( None,     0x6808) },
    { "stpc", OpCode( None,     0x6800) },
    { "dtc",  OpCode( None,     0x6801) },
    { "stm",  OpCode( None,     0x6807) },
    { "scm1", OpCode( None,     0x6805) },
    { "scm2", OpCode( None,     0x6803) },
    { "spm1", OpCode( None,     0x6804) },
    { "spm2", OpCode( None,     0x6802) },
    { "etq",  OpCode( None,     0x6809) },
    { "xie",  OpCode( None,     0x680A) },
    { "xid",  OpCode( None,     0x680B) },
    { "cie",  OpCode( None,     0x680C) },
    { "cid",  OpCode( None,     0x680D) },
    { "dsav", OpCode( None,     0x6876) },
    { "scal", OpCode( RegWord,  0x6880) },
    { "sret", OpCode( Register, 0x6890) }
};
